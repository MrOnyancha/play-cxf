package services.sunsetrise;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.2
 * 2015-11-02T14:43:10.700+01:00
 * Generated source version: 3.1.2
 * 
 */
@WebServiceClient(name = "SunSetRiseService", 
                  wsdlLocation = "http://www.webservicex.net/sunsetriseservice.asmx?WSDL",
                  targetNamespace = "http://www.webserviceX.NET/") 
public class SunSetRiseService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://www.webserviceX.NET/", "SunSetRiseService");
    public final static QName SunSetRiseServiceSoap12 = new QName("http://www.webserviceX.NET/", "SunSetRiseServiceSoap12");
    public final static QName SunSetRiseServiceSoap = new QName("http://www.webserviceX.NET/", "SunSetRiseServiceSoap");
    public final static QName SunSetRiseServiceHttpGet = new QName("http://www.webserviceX.NET/", "SunSetRiseServiceHttpGet");
    public final static QName SunSetRiseServiceHttpPost = new QName("http://www.webserviceX.NET/", "SunSetRiseServiceHttpPost");
    static {
        URL url = null;
        try {
            url = new URL("http://www.webservicex.net/sunsetriseservice.asmx?WSDL");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(SunSetRiseService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://www.webservicex.net/sunsetriseservice.asmx?WSDL");
        }
        WSDL_LOCATION = url;
    }

    public SunSetRiseService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public SunSetRiseService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SunSetRiseService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public SunSetRiseService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public SunSetRiseService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public SunSetRiseService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns SunSetRiseServiceSoap
     */
    @WebEndpoint(name = "SunSetRiseServiceSoap12")
    public SunSetRiseServiceSoap getSunSetRiseServiceSoap12() {
        return super.getPort(SunSetRiseServiceSoap12, SunSetRiseServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SunSetRiseServiceSoap
     */
    @WebEndpoint(name = "SunSetRiseServiceSoap12")
    public SunSetRiseServiceSoap getSunSetRiseServiceSoap12(WebServiceFeature... features) {
        return super.getPort(SunSetRiseServiceSoap12, SunSetRiseServiceSoap.class, features);
    }


    /**
     *
     * @return
     *     returns SunSetRiseServiceSoap
     */
    @WebEndpoint(name = "SunSetRiseServiceSoap")
    public SunSetRiseServiceSoap getSunSetRiseServiceSoap() {
        return super.getPort(SunSetRiseServiceSoap, SunSetRiseServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SunSetRiseServiceSoap
     */
    @WebEndpoint(name = "SunSetRiseServiceSoap")
    public SunSetRiseServiceSoap getSunSetRiseServiceSoap(WebServiceFeature... features) {
        return super.getPort(SunSetRiseServiceSoap, SunSetRiseServiceSoap.class, features);
    }


    /**
     *
     * @return
     *     returns SunSetRiseServiceHttpGet
     */
    @WebEndpoint(name = "SunSetRiseServiceHttpGet")
    public SunSetRiseServiceHttpGet getSunSetRiseServiceHttpGet() {
        return super.getPort(SunSetRiseServiceHttpGet, SunSetRiseServiceHttpGet.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SunSetRiseServiceHttpGet
     */
    @WebEndpoint(name = "SunSetRiseServiceHttpGet")
    public SunSetRiseServiceHttpGet getSunSetRiseServiceHttpGet(WebServiceFeature... features) {
        return super.getPort(SunSetRiseServiceHttpGet, SunSetRiseServiceHttpGet.class, features);
    }


    /**
     *
     * @return
     *     returns SunSetRiseServiceHttpPost
     */
    @WebEndpoint(name = "SunSetRiseServiceHttpPost")
    public SunSetRiseServiceHttpPost getSunSetRiseServiceHttpPost() {
        return super.getPort(SunSetRiseServiceHttpPost, SunSetRiseServiceHttpPost.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SunSetRiseServiceHttpPost
     */
    @WebEndpoint(name = "SunSetRiseServiceHttpPost")
    public SunSetRiseServiceHttpPost getSunSetRiseServiceHttpPost(WebServiceFeature... features) {
        return super.getPort(SunSetRiseServiceHttpPost, SunSetRiseServiceHttpPost.class, features);
    }

}
